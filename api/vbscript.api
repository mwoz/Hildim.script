### Источник: Справочник "Некоторые объекты Automation" <http://www.script-coding.info/wsh_chm.zip>

# Строковые функции
Asc(str)  Возвращает ASCII-код первого символа в строке str.
Chr(code)  Возвращает символ с ASCII-кодом code.
InStr([start,] str1, str2[, compare])  Возвращает индекс символа, с которого начинается первое вхождение подстроки str2 в строку str1.\nПараметр start задаёт номер символа, с которого следует начинать поиск (если не задан, то с начала строки).\nПоиск производится слева направо.\nПараметр compare задаёт режим сравнения при обработке строк (0 - двоичное сравнение, 1 - текстовое сравнение).
InStrRev(str1, str2[, start[, compare]])  То же самое, что InStr, но поиск производится справа налево, т.е возвращается номер последнего символа, с которого начинается вхождение подстроки str2 в строку str1.
Join(list[, delim])  Возвращает строку, полученную в результате конкатенации подстрок, содержащихся в массиве list.\nПараметр delim задаёт символ разделителя (по умолчанию - пробел).
Split(expr[, delim[, count[, compare]]])  Возвращает массив строк, полученных в результате разбиения строки expr на подстроки.\nПараметр delim задаёт символ разделителя (по умолчанию - пробел).\nПараметр count определяет число подстрок (по умолчанию - все).\nПараметр compare задаёт режим сравнения при обработке строк (0 - двоичное сравнение, 1 - текстовое сравнение).
LCase(str)  Возвращает строку, в которой все символы преобразованы к нижнему регистру.
UCase(str)  Возвращает строку, в которой все символы преобразованы к верхнему регистру.
Left(str, len)  Возвращает len символов с начала строки str.
Right(str, len)  Возвращает len символов с конца строки str.
Mid(str, start[, len]))  Возвращает из строки str подстроку, которая начинается с позиции start и имеет длину len.\nЕсли параметр len не указан, возвращаются все символы до конца строки.
Len(str)  Возвращает число символов в строке str.
LTrim(str)  Возвращает строку, в которой удалены все начальные пробелы.
RTrim(str)  Возвращает строку, в которой удалены все конечные пробелы.
Trim(str)  Возвращает строку, в которой удалены все начальные и конечные пробелы.
Replace(expr, find, replacewith[, start[, count[, compare]]])  Возвращает строку, которая получается из строки expr путём замен входящих в неё подстрок find на подстроки replacewith.\nПараметр start определяет начальную позицию поиска.\nПараметр count определяет число замен (по умолчанию - все).\nПараметр compare задаёт режим сравнения при обработке строк (0 - двоичное сравнение, 1 - текстовое сравнение).
Space(x)  Возвращает строку, состоящую из х пробелов.
String(number, char)  Возвращает строку, состоящую из number символов char.
StrComp(str1, str2[, compare])  Сравнивает строки.\nЕсли str1<str2, возвращается -1, если str1=str2, возвращается 0, если str1>str2, возвращается 1.\nПараметр compare задаёт режим сравнения при обработке строк (0 - двоичное сравнение, 1 - текстовое сравнение).
StrReverse(str)  Возвращает строку, полученную из строки str путём изменения порядка символов в строке на обратный.
FormatCurrency(expr[, numDigitsAfterDecimal[, includeLeadDigit[, useParens[, groupDigits]]]])  Возвращает строку, отформатированную в денежном формате.\nПараметр expr задаёт значение для форматирования.\nЕсли необязательные параметры не заданы, значения берутся из региональных настроек.\nПараметр numDigitsAfterDecimal задаёт количество десятичных разрядов справа от точки.\nПараметр includeLeadDigit задаёт отображение лидирующих нулей для дробных значений (true или false).\nПараметр useParens задаёт отображение скобок для отрицательных значений (true или false).\nПараметр groupDigits задаёт группировку разрядов с использованием разделителя из региональных настроек (true или false).
FormatDateTime(date[, namedFormat])  Возвращает строку, отформатированную в формате даты-времени.\nПараметр date задаёт значение для форматирования.\nПараметр namedFormat задаёт способ форматирования (см. описание констант форматов даты и времени в разделе "Константы даты и времени").
FormatNumber(expr[, numDigitsAfterDecimal[, includeLeadDigit[, useParens[, groupDigits]]]])  Возвращает строку, отформатированную в числовом формате.\nПараметр expr задаёт значение для форматирования.\nЕсли необязательные параметры не заданы, значения берутся из региональных настроек.\nПараметр numDigitsAfterDecimal задаёт количество десятичных разрядов справа от точки.\nПараметр includeLeadDigit задаёт отображение лидирующих нулей для дробных значений (true или false).\nПараметр useParens задаёт отображение скобок для отрицательных значений (true или false).\nПараметр groupDigits задаёт группировку разрядов с использованием разделителя из региональных настроек (true или false).
FormatPercent(expr[, numDigitsAfterDecimal[, includeLeadDigit[, useParens[, groupDigits]]]])  Возвращает строку, отформатированную в процентном формате (аргумент умножается на 100).\nПараметр expr задаёт значение для форматирования.\nЕсли необязательные параметры не заданы, значения берутся из региональных настроек.\nПараметр numDigitsAfterDecimal задаёт количество десятичных разрядов справа от точки.\nПараметр includeLeadDigit задаёт отображение лидирующих нулей для дробных значений (true или false).\nПараметр useParens задаёт отображение скобок для отрицательных значений (true или false).\nПараметр groupDigits задаёт группировку разрядов с использованием разделителя из региональных настроек (true или false).

# Математические функции
Abs(x)  Возвращает абсолютное значение числа x.
Int(x)  Возвращает целую часть числа x.\nЕсли х - отрицательное число, функция вернёт ближайшее целое число, меньшее, чем х.
Fix(x)  Возвращает целую часть числа x.\nЕсли х - отрицательное число, функция вернёт ближайшее целое число, большее, чем х.
Sgn(x)  Знаковая функция числа x.\nВозвращает 1 для чисел больше нуля, 0 для нуля и -1 для чисел меньше нуля.
Round(x, [numdecimal])  Возвращает результат округления числа x с точностью до numdecimal знаков после запятой.
Rnd([x])  Возвращает случайное число от 0 до 1.\nНеобязательный аргумент является начальным значением для генерации случайных чисел.
Sqr(x)  Возвращает квадратный корень числа x.
Sin(x)  Возвращает синус числа x.
Cos(x)  Возвращает косинус числа x.
Tan(x)  Возвращает тангенс числа x.
Atn(x)  Возвращает арктангенс числа x.
Exp(x)  Экспоненциальная функция, возвращает число е в степени x.
Log(x)  Возвращает натуральный логарифм числа x.

# Функции для работы с датой и временем
Date Возвращает текущую системную дату.
Now Возвращает текущие системные дату и время в виде, соответствующем региональным настройкам Windows.
Time Возвращает текущее системное время.
Timer Возвращает количество секунд, прошедших с полуночи.
IsDate(expr)  Возвращает true, если параметр expr задаёт корректную дату, и false в противном случае.
Year(date)  Выделяет год из даты, заданной параметром date, и возвращает это целое число.
Month(date)  Выделяет номер месяца из даты, заданной параметром date, и возвращает целое число от 1 до 12.
Day(date)  Выделяет номер дня месяца из даты, заданной параметром date, и возвращает целое число от 1 до 31.
Weekday(date[, firstdayofweek])  Возвращает целое число - день недели для даты, заданной параметром date.\nПараметр firstdayofweek - константа, показывающая, какой из дней недели считать первым.
Hour(time)  Выделяет номер часа из даты или момента времени, заданных параметром time, и возвращает целое число от 0 до 23.
Minute(time)  Выделяет количество минут из даты или момента времени, заданных параметром time, и возвращает целое число от 0 до 59.
Second(time)  Выделяет количество секунд из даты или момента времени, заданных параметром time, и возвращает целое число от 0 до 59.
DateValue(date)  Возвращает переменную подтипа Date, которая соответствует дате, заданной символьным параметром date.
TimeValue(time)  Возвращает переменную подтипа Date, которая соответствует времени, заданному символьным параметром time.
DateSerial(year, month, day)  Возвращает переменную подтипа Date, которая соответствует указанным году (параметр year), месяцу (параметр month) и дню (параметр day).
TimeSerial(hour, minute, second)  Возвращает переменную подтипа Date, которая соответствует указанным часу (параметр hour), минуте (параметр minute) и секунде (параметр second).
MonthName(month[, abbr])  Возвращает наименование для месяца с номером month.\nЕсли параметр abbr равен true, наименование месяца представляется в виде аббревиатуры, если false - в полном виде.
WeekdayName(weekday[, abbr[, firstdayofweek]])  Возвращает наименование дня недели с порядковым номером weekday.\nЕсли параметр abbr равен true, наименование дня недели представляется в виде аббревиатуры, если false - в полном виде.\nПараметр firstdayofweek - константа, показывающая, какой из дней недели считать первым.
DateAdd(interval, number, date)  Возвращает дату, отстоящую от даты date на number интервалов, заданных параметром interval, который может принимать значения: \n"yyyy" - год \n"q" - квартал \n"m" - месяц \n"y" - день года \n"d" - день \n"w" - день недели \n"ww" - неделя года \n"h" - час \n"n" - минута \n"s" - секунда
DateDiff(interval, date1, date2[, firstdayofweek[, firstweekofyear]])  Возвращает количество интервалов interval между датами date1 и date2.\nВозможные значения параметра interval - те же, что и в функции DateAdd.\nПараметр firstdayofweek - константа, показывающая, какой из дней недели считать первым.\nПараметр firstweekofyear - константа, показывающая, какую неделю считать первой в году.
DatePart(interval, date[, firstdayofweek[, firstweekofyear]])  Возвращает ту часть даты, которая соответствует параметру interval.\nВозможные значения параметра interval - те же, что и в функции DateAdd.\nПараметр firstdayofweek - константа, показывающая, какой из дней недели считать первым.\nПараметр firstweekofyear - константа, показывающая, какую неделю считать первой в году.

# Прочие функции
Array(arglist)  Возвращает массив, составленный из элементов списка arglist.\nЭлементы в списке arglist должны быть отделены друг от друга запятыми.
LBound(arrayname[, dimension])  Возвращает наименьшее значение, которое которое может принимать индекс в массиве arrayname в размерности dimension (по умолчанию параметр dimension равен 1).
UBound(arrayname[, dimension])  Возвращает наибольшее значение, которое которое может принимать индекс в массиве arrayname в размерности dimension (по умолчанию параметр dimension равен 1).
Filter(inputStrings, value[, include[, compare]])  Возвращает массив, созданный путём фильтрации переданного массива по заданным критериям.\nПараметр inputStrings - исходный одномерный массив строк.\nПараметр value - строка, критерий отбора.\nПараметр include - если задано true, в результат попадут только строки, которые содержат подстроку value, если задано false - в результат попадут только строки, которые не содержат подстроку value.\nПараметр compare - тип сравнения (0 - двоичный, 1 - текстовый).
IsArray(varname)  Возвращает true, если параметр varname является массивом, и false в противном случае.
IsDate(varname)  Возвращает true, если параметр varname задаёт корректную дату, и false в противном случае.
IsEmpty(varname)  Возвращает true, если переменная varname объявлена, но не инициализирована, и false в противном случае.
IsNull(varname)  Возвращает true, если переменная varname не содеоржит никаких корректных данных, и false в противном случае.
IsNumeric(varname)  Возвращает true, если переменная varname может быть рассмотрена в качестве числа, и false в противном случае.
IsObject(varname)  Возвращает true, если переменная varname является указателем на внешний объект, и false в противном случае.
VarType(varname)  Возвращает числовое значение, соответствующее подтипу переменной varname (см. описание констант подтипов данных в разделе "Прочие константы").
TypeName(varname)  Возвращает строку, содержащую тип переменной varname.
Hex(number)  Возвращает шестнадцатеричное представление (в символьном виде) числа number.
Oct(number)  Возвращает восьмеричное представление (в символьном виде) числа number.
MsgBox(prompt[, buttons][, title][, helpfile, context])  Выводит на экран диалоговое окно с сообщением и различными кнопками и возвращает результат нажатия на одну из кнопок.\nВозможные варианты возврата - см. описание констант нажатий на кнопки в разделе "Константы для диалоговых окон".\nПараметр prompt задаёт текст сообщения.\nЧисловой параметр buttons определяет состав кнопок, значок, кнопку по умолчанию и режим модальности окна - \nсм. описание констант в разделе "Константы для диалоговых окон" (значения необходимых констант для передачи в параметр buttons нужно просто сложить).\nПараметр title задаёт текст заголовка диалогового окна.\nПараметр helpfile задаёт путь к файлу помощи.\nПараметр context задаёт идентификатор содержания помощи.
InputBox(prompt[, title][, default][, xpos][, ypos][, helpfile, context])  Выводит на экран диалоговое окно со полем ввода и кнопками ОК, Отмена и возвращает введённую в этом окне символьную строку.\nПараметр prompt задаёт текст сообщения, которое выводится рядом с полем ввода.\nПараметр title задаёт текст заголовка диалогового окна.\nПараметр default задаёт значение по умолчанию для поля ввода.\nПараметры xpos и ypos определяют координаты левого верхнего угла окна.\nПараметр helpfile задаёт путь к файлу помощи.\nПараметр context задаёт идентификатор содержания помощи.
CreateObject(servername.typename[, location])  Создаёт экземпляр объекта автоматизации и возвращает ссылку на него.\nЗдесь servername - имя приложения, являющегося сервером автоматизации, typename - тип или класс создаваемого объекта, location - сетевое имя компьютера, на котором будет создан объект.
GetObject([pathname][, classname])  Возвращает ссылку на объект класса classname, который хранится в отдельном файле, путь к которому задаётся параметром pathname.
CBool(expr)  Возвращает значение, полученное в результате преобразования выражения expr к подтипу данных boolean (true или false).\nНапример, CBool(3=2) или CBool("-1").
CByte(expr)  Возвращает значение, полученное в результате преобразования выражения expr к подтипу данных byte (целое число от 0 до 255).\nНапример, CByte(256) вызовет ошибку переполнения.
CCur(expr)  Возвращает значение, полученное в результате преобразования выражения expr к подтипу данных currency (специальный числовой формат для денежных величин).
CDate(expr)  Возвращает значение, полученное в результате преобразования выражения expr к подтипу данных date/time (даты от 1 января 100 года до 31 декабря 9999 года).
CDbl(expr)  Возвращает значение, полученное в результате преобразования выражения expr к подтипу данных double (числа с плавающей точкой двойной точности).
CInt(expr)  Возвращает значение, полученное в результате преобразования выражения expr к подтипу данных integer (целые числа в диапазоне от -32768 до 32768).
CLng(expr)  Возвращает значение, полученное в результате преобразования выражения expr к подтипу данных long (целые числа в диапазоне от -2 147 483 648 до 2 147 483 647).
CSng(expr) Возвращает значение, полученное в результате преобразования выражения expr к подтипу данных single (числа с плавающей точкой одинарной точности).
CStr(expr)  Возвращает значение, полученное в результате преобразования выражения expr к подтипу данных string.
Eval(expr)  Вычисляет выражение и возвращает результат.\nНапример, Eval(3=2).
GetLocale Возвращает текущее значение (ID) настроек локализации (набор установок языка, региона, раскладки клавиатуры и т.д.).\nВозможные значения - см. MSDN статью "Locale ID (LCID) Chart".
SetLocale(lcid)  Возвращает текущее значение (ID) настроек локализации (набор установок языка, региона, раскладки клавиатуры и т.д.) и устанавливает новое.\nВозможные значения - см. MSDN статью "Locale ID (LCID) Chart".
ScriptEngine Возвращает название текущего языка, например, "VBScript".
ScriptEngineBuildVersion Возвращает номер сборки текущей среды исполнения скриптов.
ScriptEngineMajorVersion Возвращает номер версии текущей среды исполнения скриптов.
ScriptEngineMinorVersion Возвращает номер подверсии текущей среды исполнения скриптов.
RGB(red, green, blue)  Возвращает целочисленное значение, соответствующее цвету RGB, заданному с помощью трёх составляющих - красного, зелёного и синего цветов числами от 0 до 255.

# Константы для диалоговых окон
vbOKOnly 0 Выводится кнопка ОК.
vbOKCancel 1 Выводятся кнопки ОК и Отмена (Cancel).
vbAbortRetryIgnore 2 Выводятся кнопки Стоп (Abort), Повтор (Retry) и Пропустить (Ignore).
vbYesNoCancel 3 Выводятся кнопки Да (Yes), Нет (No) и Отмена (Cancel).
vbYesNo 4 Выводятся кнопки Да (Yes) и Нет (No).
vbRetryCancel 5 Выводятся кнопки Повтор (Retry) и Отмена (Cancel).
vbCritical 16 Выводится значок Stop Mark.
vbQuestion 32 Выводится значок Question Mark.
vbExclamation 48 Выводится значок Exclamation Mark.
vbInformation 64 Выводится значок Information Mark.
vbDefaultButton1 0 По умолчанию в окне выбирается первая кнопка.
vbDefaultButton2 256 По умолчанию в окне выбирается вторая кнопка.
vbDefaultButton3 512 По умолчанию в окне выбирается третья кнопка.
vbDefaultButton4 768 По умолчанию в окне выбирается четвёртая кнопка.
vbApplicationModal 0 Диалоговое окно выводится в модальном режиме.
vbSystemModal 4096 Диалоговое окно выводится в модальном режиме и располагается сверху всех запускаемых приложений.
vbOK 1 Нажата кнопка ОК.
vbCancel 2 Нажата кнопка Отмена (Cancel).
vbAbort 3 Нажата кнопка Стоп (Abort).
vbRetry 4 Нажата кнопка Повтор (Retry).
vbIgnore 5 Нажата кнопка Пропустить (Ignore).
vbYes 6 Нажата кнопка Да (Yes).
vbNo 7 Нажата кнопка Нет (No).

# Строковые константы
vbCr Chr(13) Возврат каретки.
VbCrLf Chr(13) & Chr(10) Возврат каретки и перевод строки.
vbFormFeed Chr(12) Перевод страницы.
vbLf Chr(10) Перевод строки.
vbNewLine Chr(13) & Chr(10) or Chr(10) Определяемый платформой (подходящий) символ новой строки.
vbNullChar Chr(0) Символ с нулевым кодом.
vbNullString Нулевая строка Не тоже самое, что строка нулевой длины ("").
vbTab Chr(9) Символ табуляции.
vbVerticalTab Chr(11) Символ вертикальной табуляции

# Константы даты и времени
vbSunday 1 Воскресенье
vbMonday 2 Понедельник
vbTuesday 3 Вторник
vbWednesday 4 Среда
vbThursday 5 Четверг
vbFriday 6 Пятница
vbSaturday 7 Суббота
vbUseSystemDayOfWeek 0 Использовать для определения первого дня недели региональные настройки системы.
vbFirstJan1 1 Первой неделей в году считается та, в которой было 1 января.
vbFirstFourDays 2 Первой неделей в году считается та, в которой было по крайней мере четыре дня нового года.
vbFirstFullWeek 3 Первой неделей в году считается первая полная неделя.
vbGeneralDate 0 Дата и время выводятся в формате, определяемом региональными настройками системы.
vbLongDate 1 Выводить дату, используя полный формат.
vbShortDate 2 Выводить дату, используя краткий формат.
vbLongTime 3 Выводить время, используя полный формат.
vbShortTime 4 Выводить время, используя краткий формат.

# Прочие константы
vbBlack &h00 Чёрный цвет
vbRed &hFF Красный цвет
vbGreen &hFF00 Зелёный цвет
vbYellow &hFFFF Жёлтый цвет
vbBlue &hFF0000 Синий цвет
vbMagenta &hFF00FF Фиолетовый цвет
vbCyan &hFFFF00 Бирюзовый (голубой) цвет
vbWhite &hFFFFFF Белый цвет
vbBinaryCompare 0 Определяет двоичное сравнение.
vbTextCompare 1 Определяет текстовое сравнение.
vbObjectError -2147221504 Определяет минимальное значение для номеров ошибок, задаваемых пользователем.
vbUseDefault -2 Использовать значения по умолчанию из региональных настроек системы.
vbTrue -1 Логическое значение "Истина".
vbFalse 0 Логическое значение "Ложь".
vbEmpty 0 Переменная не инициализирована.
vbNull 1 Переменная не содержит корректных данных.
vbInteger 2 Переменная имеет подтип Integer.
vbLong 3 Переменная имеет подтип Long.
vbSingle 4 Переменная имеет подтип Single.
vbDouble 5 Переменная имеет подтип Double.
vbCurrency 6 Переменная имеет подтип Currency.
vbDate 7 Переменная имеет подтип Date.
vbString 8 Переменная имеет подтип String.
vbObject 9 Переменная имеет подтип Object.
vbError 10 Переменная имеет подтип Error.
vbBoolean 11 Переменная имеет подтип Boolean.
vbVariant 12 Переменная имеет подтип Variant (только для массивов переменных типа Variant).
vbDataObject 13 Объект доступа к данным.
vbDecimal 14 Переменная имеет подтип Decimal.
vbByte 17 Переменная имеет подтип Byte.
vbArray 8192 Переменная является массивом.

#$regex=new regex
regex.Pattern Sets or returns the regular expression pattern being searched for.
regex.Global Sets or returns a Boolean value that indicates if a pattern should match all occurrences in an entire search string or just the first one.
regex.IgnoreCase  True | False - Sets or returns a Boolean value that indicates if a pattern search is case-sensitive or not.
regex.Execute(string) Executes a regular expression search against a specified string.
regex.Test Executes a regular expression search against a specified string and returns a Boolean value that indicates if a pattern match was found.
regex.Replace(string1, string2)  Replaces text found in a regular expression search. string1 \nRequired. String1 is the text string in which the text replacement is to occur. \nstring2 \nRequired. String2 is the replacement text string.

#$matches=regex.Execute(
matches.count
match.Length
match.FirstIndex
match.Value

err.Description
err.HelpContext
err.HelpFile
err.Number
err.Source
err.Raise(number, source, description, helpfile, helpcontext)
err.Clear()

