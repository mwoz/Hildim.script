### Данные взяты с книги "Клиентский JavaScript v1.3. Справочник"
### Подсказки будут работать когда будет реализовано Issue 86 <http://code.google.com/p/scite-ru/issues/detail?id=86>
### (или переносите все их 2й строкой вручную)

anchor.name \nИмя якоря.
anchor.text \nТекст якоря.
anchor.x \nПозиция левого края якоря по оси х в пикселах относительно левого края документа.
anchor.y \nПозиция верхнего края якоря по оси у в пикселах относительно верхнего края документа.

array.constructor \nСпецифицирует функцию, создающую прототип объекта.
array.index \nДля массива, созданного в результате совпадения с регулярным выражением, это индекс с базой 0 совпадения в строке.
array.input \nДля массива, созданного в результате совпадения с регулярным выражением, отражает строку-оригинал, относительно которой выполняется подстановка регулярного выражения.
array.length \nКоличество элементов массива.
array.prototype \nПозволяет добавлять свойства ко всем объектам.
array.concat() \nОбъединяет два массива и возвращает новый массив.
array.join() \nОбъединяет все элементы массива в строку.
array.pop() \nУдаляет последний элемент массива и возвращает этот элемент.
array.push() \nДобавляет один или более элементов в конец массива и возвращает новый размер массива.
array.reverse() \nПеремещает/разворачивает элементы массива: первый элемент становится последним, а последний - первым.
array.shift() \nУдаляет первый элемент массива и возвращает этот элемент.
array.slice() \nИзвлекает раздел массива и возвращает новый массив.
array.splice() \nДобавляет и/или удаляет элементы массива.
array.sort() \nСортирует элементы массива.
array.toSource() \nВозвращает литерал массива, представляющий специфицированный массив; Вы можете использовать это значение для создания нового массива. Переопределяет метод Object.toSource.
array.toString() \nВозвращает строку, представляющую массив и его элементы. Переопределяет метод Object.toString.
array.unshift() \nДобавляет один или более элементов в начало массива и возвращает новый размер массива.
array.valueOf() \nВозвращает примитивное значение массива. Переопределяет метод Object.valueOf.

boolean.constructor \nСпецифицирует функцию, создающую прототип объекта.
boolean.prototype \nОпределяет свойство, которое используется всеми Boolean-объектами.
boolean.toSource() \nВозвращает литерал объекта, представляющий специфицированный Boolean-объект; Вы можете использовать это значение для создания нового объекта. Переопределяет метод Object.toSource.
boolean.toString() \nВозвращает строку, представляющую специфицированный объект. Переопределяет метод Object.toString.
boolean.valueOf() \nВозвращает примитивное значение Boolean-объекта. Переопределяет метод Object.valueOf.

button.form \nСпецифицирует форму, содержащую объект Button.
button.name \nОтражает атрибут NAME.
button.type \nОтражает атрибут TYPE.
button.value \nОтражает атрибут VALUE.
button.blur() \nУбирает фокус с кнопки.
button.click() \nСимулирует щелчок мышью по кнопке.
button.focus() \nПередаёт фокус кнопке.
button.handleEvent() \nВызывает обработчик специфицированного события.

checkbox.checked \nБулево свойство, отражающее текущее состояние переключателя (есть ли "птичка").
checkbox.defaultChecked \n Булево свойство, отражающее атрибут CHECKED.
checkbox.form \nСпецифицирует форму, содержащую объект Checkbox.
checkbox.name \nОтражает атрибут NAME.
checkbox.type \nОтражает атрибут TYPE.
checkbox.value \nОтражает атрибут TYPE.
checkbox.blur() \nУбирает фокус.
checkbox.click() \nСимулирует щелчок мыши.
checkbox.focus() \nПередаёт фокус ввода.
checkbox.handleEvent() \nВызывает обработчик специфицированного события.

date.constructor \nСпецифицирует функцию, которая создаёт прототип объекта.
date.prototype \nПозволяет добавлять свойства к  Date -объекту.
date.getDate() \nВозвращает день/число месяца для специфицированной даты в соответствии с локальным временем.
date.getDay() \nВозвращает день недели для специфицированной даты в соответствии с локальным временем.
date.getFullYear() \nВозвращает год для специфицированной даты в соответствии с локальным временем.
date.getHours() \nВозвращает часы для специфицированной даты в соответствии с локальным временем.
date.getMilliseconds() \nВозвращает миллисекунды для специфицированной даты в соответствии с локальным временем.
date.getMinutes() \nВозвращает минуты для специфицированной даты в соответствии с локальным временем.
date.getMonth() \nВозвращает месяц для специфицированной даты в соответствии с локальным временем.
date.getSeconds() \nВозвращает секунды для специфицированной даты в соответствии с локальным временем.
date.getTime() \nВозвращает числовое значение - время для специфицированной даты в соответствии с локальным временем.
date.getTimezoneOffset() \nВозвращает смещение часового пояса в минутах для текущей местности.
date.getUTCDate() \nВозвращает число/день месяца для специфицированной даты в соответствии со всемирным временем.
date.getUTCDay() \nВозвращает день недели для специфицированной даты в соответствии со всемирным временем.
date.getUTCFullYear() \nВозвращает год для специфицированной даты в соответствии со всемирным временем.
date.getUTCHours() \nВозвращает часы для специфицированной даты в соответствии со всемирным временем.
date.getUTCMilliseconds() \nВозвращает миллисекунды для специфицированной даты в соответствии со всемирным временем.
date.getUTCMinutes() \nВозвращает минуты для специфицированной даты в соответствии со всемирным временем.
date.getUTCMonth() \nВозвращает месяц для специфицированной даты в соответствии со всемирным временем.
date.getUTCSeconds() \nВозвращает секунды для специфицированной даты в соответствии со всемирным временем.
date.getYear() \nВозвращает год для специфицированной даты в соответствии с локальным временем.
date.parse() \nВозвращает количество миллисекунд в дате, прошедших после 1 января 1970, 00:00:00, местного времени.
date.setDate() \nУстанавливает день месяца для специфицированной даты в соответствии с локальным временем.
date.setFullYear() \nУстанавливает год для специфицированной даты в соответствии с локальным временем.
date.setHours() \nУстанавливает час для специфицированной даты в соответствии с локальным временем.
date.setMilliseconds() \nУстанавливает часы для специфицированной даты в соответствии с локальным временем.
date.setMinutes() \nУстанавливает минуты для специфицированной даты в соответствии с локальным временем.
date.setMonth() \nУстанавливает месяц для специфицированной даты в соответствии с локальным временем.
date.setSeconds() \nУстанавливает секунды для специфицированной даты в соответствии с локальным временем.
date.setTime() \nУстанавливает значение объекта Date в соответствии с локальным временем.
date.setUTCDate() \nУстанавливает число/день месяца для специфицированной даты в соответствии со всемирным временем.
date.setUTCFullYear() \nУстанавливает полный год для специфицированной даты в соответствии со всемирным временем.
date.setUTCHours() \nУстанавливает час для специфицированной даты в соответствии со всемирным временем.
date.setUTCMilliseconds() \nУстанавливает миллисекунды для специфицированной даты в соответствии со всемирным временем.
date.setUTCMinutes() \nУстанавливает минуты для специфицированной даты в соответствии со всемирным временем.
date.setUTCMonth() \nУстанавливает месяц для специфицированной даты в соответствии со всемирным временем.
date.setUTCSeconds() \nУстанавливает секунды для специфицированной даты в соответствии со всемирным временем.
date.setYear() \nУстанавливает год для специфицированной даты в соответствии с локальным временем.
date.toGMTString() \nКонвертирует дату в строку, используя соглашения Internet по GMT.
date.toLocaleString() \nКонвертирует дату в строку, используя соглашения текущей местности.
date.toSource() \nВозвращает литерал объекта, представляющий специфицированный Date -объект; Вы можете использовать это значение для создания нового объекта. Переопределяет метод Object.toSource.
date.toString() \nВозвращает строку, представляющую специфицированный Date -объект. Переопределяет метод Object.toString.
date.toUTCString() \nКонвертирует дату в строку, используя соглашения по всемирному времени.
date.UTC() \nВозвращает количество миллисекунд в Date -объекте после 1 января 1970, 00:00:00, всемирного времени.
date.valueOf() \nВозвращает примитивное значение Date -объекта. Переопределяет метод Object.valueOf.

document.alinkColor \nСтрока, специфицирующая атрибут ALINK.
document.anchors \nМассив, содержащий вхождение каждого якоря документа.
document.applets \nМассив, содержащий вхождение каждого аплета документа.
document.bgColor \nСтрока, специфицирующая атрибут BGCOLOR.
document.classes \nСоздаёт объект Style, который может специфицировать стили тэгов HTML с атрибутом CLASS.
document.cookie \nСпецифицирует куку.
document.domain \nСпецифицирует имя домена сервера, обслужившего документ.
document.embeds \nМассив, содержащий вхождение каждого plug-in документа.
document.fgColor \nСтрока, специфицирующая атрибут TEXT.
document.formName \nОтдельное свойство для каждой именованной формы документа.
document.forms \nМассив, содержащий вхождение каждой формы документа.
document.height \nВысота документа в пикселах.
document.ids \nСоздаёт объект Style, который может специфицировать стиль отдельных тэгов HTML.
document.images \nМассив, содержащий вхождение каждого изображения документа.
document.lastModified \nСтрока, специфицирующая дату последнего изменения документа.
document.layers \nМассив, содержащий вхождение каждого слоя документа.
document.linkColor \nСтрока, специфицирующая атрибут LINK.
document.links \nМассив, содержащий вхождение каждой гиперссылки документа.
document.parentWindow \nРодительское окно
document.plugins \nМассив, содержащий вхождение каждого plug-in документа.
document.referrer \nСтрока, специфицирующая URL вызывающего документа.
document.tags \nСоздаёт объект Style, который может специфицировать стили тэгов HTML.
document.title \nСтрока, специфицирующая содержимое тэга TITLE.
document.URL \nСтрока, специфицирующая полный URL документа.
document.vlinkColor \nСтрока, специфицирующая атрибут VLINK.
document.width \nШирина документа в пикселах.
document.captureEvents() \nУстанавливает захват документом всех событий специфицированного типа.
document.close() \nЗакрывает поток вывода и форсирует отображение данных.
document.contextual() \nИспользует контекстуальный отбор по критериям специфицирования объекта Style, который может устанавливать стиль отдельных тэгов HTML.
document.getSelection() \nВозвращает строку, содержащую текущий выбранный текст.
document.handleEvent() \nВызывает обработчик специфицированного события.
document.open() \nОткрывает поток сбора вывода методов write или writeln.
document.releaseEvents() \nУстанавливает освобождение объектами window или document захваченных событий специфицированного типа.
document.routeEvent() \nПередаёт захваченное событие по иерархии нормальных событий.
document.write() \nЗаписывает одно или более выражений HTML в документ в специфицированном окне.
document.writeln() \nЗаписывает одно или более выражений HTML и символ новой строки в документ в специфицированном окне.

event.data \nВозвращает массив строк, содержащий URL'ы отпущенных объектов. Передаётся событием DragDrop.
event.height \nВысота окна или фрэйма.
event.layerX \nЧисло, специфицирующее ширину объекта при передаче с событием resize, либо горизонтальную координату курсора в пикселах относительно слоя, в котором событие возникло. Заметьте, что layerX является синонимом x.
event.layerY \nЧисло, специфицирующее высоту объекта при передаче с событием resize либо вертикальную координату курсора в пикселах относительно слоя, в котором событие возникло. Заметьте, что layerY является синонимом y.
event.modifiers \nСтрока, специфицирующая ключи-модификаторы, ассоциированные с событием мыши или клавиатуры. Ключи-модификаторы это: ALT_MASK, CONTROL_MASK, SHIFT_MASK и META_MASK.
event.pageX \nЧисло, специфицирующее позицию курсора по горизонтали в пикселах относительно страницы.
event.pageY \nЧисло, специфицирующее позицию курсора по вертикали в пикселах относительно страницы.
event.screenX \nЧисло, специфицирующее позицию курсора по горизонтали в пикселах относительно экрана.
event.screenY \nЧисло, специфицирующее позицию курсора по вертикали в пикселах относительно экрана.
event.target \nСтрока, представляющая объект, которому событие было первоначально направлено. (Все события.)
event.type \nСтрока, представляющая тип события. (Все события.)
event.which \nЧисло, специфицирующее нажатую кнопку, или ASCII-значение нажатой клавиши. Для мыши: 1 это левая клавиша, 2 - средняя, а 3 - правая клавиша.
event.width \nШирина окна или фрэйма.
event.x \nСиноним для layerX.
event.y \nСиноним для layerY.

FileUpload.form \nСпецифицирует форму, содержащую объект FileUpload.
FileUpload.name \nОтражает атрибут NAME.
FileUpload.type \nОтражает атрибут TYPE.
FileUpload.value \nОтражает текущее значение поля элемента загрузки файла; соответствует имени загружаемого файла.
FileUpload.blur() \nУбирает фокус с объекта.
FileUpload.focus() \nПередаёт фокус объекту.
FileUpload.handleEvent() \n Вызывает обработчик для специфицированного события.
FileUpload.select() \nВыбирает область ввода поля загрузки файла.

form.action \nОтражает атрибут ACTION.
form.elements \nМассив, отражающий все элементы формы.
form.encoding \nОтражает атрибут ENCTYPE.
form.length \nОтражает количество элементов формы.
form.method \nОтражает атрибут METHOD.
form.name \nОтражает атрибут NAME.
form.target \nОтражает атрибут TARGET.
form.handleEvent() \nВызывает обработчик для специфицированного события.
form.reset() \nСимулирует щелчок мыши по кнопке reset.
form.submit() \nОтправляет форму на сервер.

hidden.form \nСпецифицирует форму, содержащую объект Hidden.
hidden.name \nОтражает атрибут NAME.
hidden.type \nОтражает атрибут TYPE.
hidden.value \nОтражает текущее значение объекта Hidden.
hidden.history.current \nСпецифицирует URL текущего вхождения в history.
hidden.length \nОтражает количество вхождений в списке history.
hidden.next \nСпецифицирует URL следующего вхождения в history.
hidden.previous \nСпецифицирует URL предыдущего вхождения в history.
hidden.back() \nЗагружает предыдущий URL из списка history.
hidden.forward() \nЗагружает следующий URL из списка history.
hidden.go() \nЗагружает URL из списка history.

image.border \nОтражает атрибут BORDER.
image.complete \nБулево значение, указывающее, завершил ли браузер попытку загрузки изображения.
image.height \nОтражает атрибут HEIGHT.
image.hspace \nОтражает атрибут HSPACE.
image.lowsrc \nОтражает атрибут LOWSRC.
image.name \nОтражает атрибут NAME.
image.src \nОтражает атрибут SRC.
image.vspace \nОтражает атрибут VSPACE.
image.width \nОтражает атрибут WIDTH.
image.handleEvent() \nВызывает обработчик для специфицированного события.

JavaArray.length \nКоличество элементов в Java-массиве,  представляемом объектом JavaArray.
JavaArray.toString() \nВозвращает строку, идентифицирующую объект как JavaArray

layer.above \nОбъект layer, расположенный выше данного объекта в порядке z-order относительно всех слоёв документа, или содержащего объекта window, если этот слой - самый верхний.
layer.ackground \nИзображение, используемое в качестве фона канвы слоя.
layer.bgColor \nЦвет, используемый в качестве однородного цвета фона канвы слоя.
layer.below \nОбъект layer, расположенный  ниже данного объекта в порядке z-order относительно всех слоёв документа, или null, если этот слой - самый нижний.
layer.clip.bottom \nНижний край отсекающего прямоугольника (видимой части слоя).
layer.clip.height \nВысота отсекающего прямоугольника (видимой части слоя).
layer.clip.left \nЛевый край отсекающего прямоугольника (видимой части слоя).
layer.clip.right \nПравый край отсекающего прямоугольника (видимой части слоя).
layer.clip.top \nВерхний край отсекающего прямоугольника (видимой части слоя).
layer.clip.width \nШирина отсекающего прямоугольника (видимой части слоя).
layer.document \nАссоциированный документ слоя.
layer.left \nПозиция по горизонтали левого края слоя в пикселах относительно его родительского слоя.
layer.name \nСтрока, специфицирующая имя, присвоенное слою атрибутом ID тэга LAYER.
layer.pageX \nПозиция слоя по горизонтали в пикселах относительно страницы.
layer.pageY \nПозиция слоя по вертикали в пикселах относительно страницы.
layer.parentLayer \nОбъект layer, который содержит данный слой, или содержащий объект window, если этот слой не вложен в другой слой.
layer.siblingAbove \nОбъект layer, расположенный выше данного в порядке z-order среди всех слоёв, использующих тот же самый родительский слой, или null, если слой не имеет родственников, расположенных выше него.
layer.siblingBelow \nОбъект layer, расположенный ниже данного в порядке z-order среди всех слоёв, использующих тот же самый родительский слой, или null, если это самый нижний слой.
layer.src \nСтрока, специфицирующая URL содержимого слоя.
layer.top \nПозиция по вертикали верхнего края слоя в пикселах относительно его родительского слоя.
layer.visibility \nВиден слой или нет.
layer.window \nОбъект window или Frame, содержащий данный слой, вне зависимости от того, вложен ли слой в другой слой.
layer.x \nУдобный синоним для Layer.left.
layer.y \nУдобный синоним для Layer.top.
layer.zIndex \nПорядок z-order расположения данного слоя относительно других слоёв-родственников.
layer.captureEvents() \nУстанавливает окно или документ для захвата всех событий специфицированного типа.
layer.handleEvent() \nВызывает обработчик для специфицированного события.
layer.load() \nЗаменяет исходное содержимое слоя на содержимое специфицированного файла и одновременно изменяет ширину размещения HTML-содержимого слоя.
layer.moveAbove() \nПомещает данный слой в стэк над слоем, специфицированным как аргумент, без изменения горизонтальной и вертикальной позиции слоя.
layer.moveBelow() \nПомещает данный слой в стэк под специфицированным слоем без изменения горизонтальной и вертикальной позиции слоя.
layer.moveBy() \nИзменяет позицию слоя, применяя специфицированные deltas, измеряемые в пикселах.
layer.moveTo() \nПеремещает верхний левый угол окна на специфицированные координаты экрана.
layer.moveToAbsolute() \nИзменяет позицию слоя на специфицированные пикселные координаты страницы (вместо содержащего слоя).
layer.releaseEvents() \nДаёт слою установку освободить захваченное событие специфицированного типа, отправляя событие объекту, следующему далее по цепи иерархии.
layer.resizeBy() \nИзменяет размеры слоя на специфицированные значения height и width (в пикселах).
layer.resizeTo() \nИзменяет значения размеров слоя на специфицированные height и width (в пикселах).
layer.routeEvent() \nПередаёт захваченное событие по нормальной цепи иерархии.

link.hash \nСпецифицирует имя якоря в URL.
link.host \nСпецифицирует хост и имя домена или IP-адрес сетевого хоста.
link.hostname \nСпецифицирует часть host:port из URL.
link.href \nСпецифицирует весь URL.
link.pathname \nСпецифицирует часть URL-пути из URL.
link.port \nСпецифицирует порт, используемый сервером.
link.protocol \nСпецифицирует начало URL, включая двоеточие.
link.search \nСпецифицирует строку запроса.
link.target \nОтражает атрибут TARGET.
link.text \nСтрока, содержащая содержимое соответствующего тэга A.
link.x \nПозиция левого края ссылки по горизонтали в пикселах относительно левого края документа.
link.y \nПозиция верхнего края ссылки по вертикали в пикселах относительно верхнего края документа.
link.handleEvent() \nВызывает обработчик для специфицированного события.

location.hash \nСпецифицирует имя якоря в URL.
location.host \nСпецифицирует имя хоста и домена или IP-адрес сетевого хоста.
location.hostname \nСпецифицирует часть host:port в URL.
location.href \nСпецифицирует полный URL.
location.pathname \nСпецифицирует часть URL-пути в URL.
location.port \nСпецифицирует порт, используемый сервером при соединении.
location.protocol \nСпецифицирует начало URL, включая двоеточие.
location.search \nСпецифицирует запрос.
location.reload() \nФорсирует перезагрузку текущего документа окна.
location.replace() \nЗагружает специфицированный URL поверх текущего вхождения в списке history.

math.E \nЭйлерова константа и база натуральных логарифмов, приблизительно 2.718.
math.LN10 \nНатуральный логарифм 10, приблизительно 2.302.
math.LN2 \nНатуральный логарифм 2, приблизительно 0.693.
math.LOG10E \nБаза 10 логарифма E (приблизительно 0.434).
math.LOG2E \nБаза 2 логарифма E (приблизительно 1.442).
math.PI \nЧастное от деления длины окружности на диаметр, приблизительно 3.14159.
math.SQRT1_2 \nКвадратный корень 1/2; эквивалентно 1 на квадратный корень 2, приблизительно 0.707.
math.SQRT2 \nКвадратный корень2, приблизительно 1.414.
math.abs() \nВозвращает абсолютное значение числа.
math.acos() \nВозвращает арккосинус (в радианах) числа.
math.asin() \nВозвращает арксинус (в радианах) числа.
math.atan() \nВозвращает арктангенс (в радианах) числа.
math.atan2() \nВозвращает арктангенс частного аргументов.
math.ceil() \nВозвращает наименьшее целое, которое больше или равно.
math.cos() \nВозвращает косинус числа.
math.exp() \nВозвращает Enumber, где number это аргумент, а E это константа Эйлера - база натуральных логарифмов.
math.floor() \nВозвращает наибольшее целое, которое меньше или равно.
math.log() \nВозвращает натуральный логарифм (база E) числа.
math.max() \nВозвращает большее из двух чисел.
math.min() \nВозвращает меньшее из двух чисел.
math.pow() \nВозвращает base, возведённую в степень exponent, то есть baseexponent.
math.random() \nВозвращает псевдослучайное число в диапазоне от 0 до 1.
math.round() \nВозвращает значение числа, округлённое до ближайшего целого.
math.sin() \nВозвращает синус числа.
math.sqrt() \nВозвращает квадратный корень числа.
math.tan() \nВозвращает тангенс числа.

mimetype.description \nОписание MIME-типа.
mimetype.enabledPlugin \nСсылка на Plugin-объект, сконфигурированный для данного MIME-типа.
mimetype.suffixes \nСтрока с перечислением допустимых расширений имён файлов для данного MIME-типа, например, "mpeg, mpg, mpe, mpv, vbs, mpegv".
mimetype.type \nИмя MIME-типа, например, "video/mpeg" или "audio/x-wav".

navigator.appCodeName \nСпецифицирует кодовое имя браузера.
navigator.appName \nСпецифицирует  имя браузера.
navigator.appVersion \nСпецифицирует версию Navigator'а.
navigator.language \nЯзык Navigator'а.
navigator.mimeTypes \nМассив всех MIME-типов, поддерживаемых клиентом.
navigator.platform \nТип машины, для которого Navigator был скомпилирован. 
navigator.plugins \nМассив всех plug-in'ов, установленных на клиенте.
navigator.userAgent \nСпецифицирует шапку/header user-agent (пользовательский агент).
navigator.javaEnabled() \nПроверяет, включён ли Java.

plugins.refresh() \nДелает вновь установленные plug-in'ы доступными и по выбору перезагружает открытые документы, содержащие plug-in'ы.
plugins.preference() \nДаёт возможность помеченному скрипту получать и устанавливать определённые настройки Navigator'а.
plugins.savePreferences() \nСохраняет настройки Navigator'а в локальном файле prefs.js.
plugins.taintEnabled() \nСпецифицирует, включено ли разрушение данных.

number.constructor \nСпецифицирует функцию, которая создаёт прототип объекта.
number.MAX_VALUE \nНаибольшее представимое число.
number.MIN_VALUE \nНаименьшее представимое число.
number.NaN \nСпециальное значение "not a number".
number.NEGATIVE_INFINITY \nСпециальное значение - отрицательная бесконечность; возвращается при переполнении.
number.POSITIVE_INFINITY \nСпециальное значение - положительная бесконечность; возвращается при переполнении.
number.prototype \nПозволяет добавлять свойства к Number-объекту.
number.toSource() \nВозвращает литерал объекта, представляющий специфицированный Number-объект; Вы можете использовать это значение для создания нового объекта. Переопределяет метод Object.toSource.
number.toString() \nВозвращает строку, представляющую специфицированный объект. Переопределяет метод Object.toString.
number.valueOf() \nВозвращает примитивное значение специфицированного объекта. Переопределяет метод Object.valueOf.

object.constructor \nСпецифицирует функцию, которая создаёт прототип объекта.
object.prototype \nПозволяет добавлять свойства во все объекты.
object.eval() \nНе рекомендуется. Вычисляет строку кода JavaScript в контексте специфицированного объекта.
object.toSource() \nВозвращает литерал объекта, представляющий специфицированный объект; Вы можете использовать это значение для создания нового объекта.
object.toString() \nВозвращает строку, представляющую специфицированный объект.
object.unwatch() \nУдаляет точку наблюдения/watchpoint из свойства объекта.
object.valueOf() \nВозвращает примитивное значение специфицированного объекта.
object.watch() \nДобавляет точку наблюдения/watchpoint в свойство объекта.

option.defaultSelected \nСпецифицирует статус по умолчанию опции.
option.index \nИндекс с базой 0 элемента в массиве Select.options.
option.length \nКоличество элементов в массиве Select.options.
option.selected \nСпецифицирует текущий статус опции (выбрана или нет).
option.text \nСпецифицирует текст опции.
option.value \nСпецифицирует значение, возвращаемое на сервер, когда опция выбрана и форма отправляется.

packages.className \nПолное квалифицированное имя Java-класса в других пакетах, кроме пакетов netscape, java или sun, доступного в JavaScript.
packages.java \nЛюбой класс Java-пакета java.*.
packages.netscape \nЛюбой класс Java-пакета netscape.*.
packages.sun \nЛюбой класс Java-пакета sun.*.

password.defaultValue \nОтражает атрибут VALUE.
password.form \nСпецифицирует форму, содержащую Password-объект.
password.name \nОтражает атрибут NAME.
password.type \nОтражает атрибут TYPE.
password.value \nОтражает текущее значение поля Password-объекта.
password.blur() \nУбирает фокус с объекта.
password.focus() \nПередаёт объекту фокус.
password.handleEvent() \nВызывает обработчик для специфицированного события. 
password.select() \nВыделяет область ввода объекта.

plugin.description \nОписание plug-in'а.
plugin.filename \nИмя файла plug-in'а на диске.
plugin.length \nКоличество элементов массива MimeType-объектов plug-in'а.
plugin.name \nИмя plug-in'а.

radio.checked \nДаёт возможность программно выбрать радио-кнопку (свойство отдельной кнопки).
radio.defaultChecked \nОтражает атрибут CHECKED (свойство отдельной кнопки).
radio.form \nСпецифицирует форму, содержащую Radio-объект (свойство массива кнопок).
radio.name \nОтражает атрибут NAME (свойство массива кнопок).
radio.type \nОтражает атрибут TYPE (свойство массива кнопок).
radio.value \nОтражает атрибут VALUE (свойство массива кнопок).
radio.blur() \nУбирает фокус с радио-кнопки.
radio.click() \nСимулирует щелчок мыши по радио-кнопке.
radio.focus() \nПередаёт фокус радио-кнопке.
radio.handleEvent() \nВызывает обработчик для специфицированного события.

RegExp.constructor \nСпецифицирует функцию, которая создаёт прототип объекта.
RegExp.global \nТестировать или нет регулярное выражение относительно всех возможных совпадений в строке, или только относительно первого совпадения.
RegExp.ignoreCase \nИгнорировать ли регистр при поиске совпадения в строке.
RegExp.input \nСтрока, относительно которой выполняется поиск совпадения с регулярным выражением.
RegExp.lastIndex \nИндекс, с которого начинается следующее совпадение. 
RegExp.lastMatch \nПоследние совпавшие символы.
RegExp.lastParen \nПоследнее совпадение подстроки в скобках, если имеется.
RegExp.leftContext \nПодстрока, предшествующая самому последнему совпадению.
RegExp.multiline \nИскать ли на нескольких строках.
RegExp.prototype \nПозволяет добавлять свойства всем объектам.
RegExp.rightContext \nСтрока, следующая за самым последним совпадением.
RegExp.source \nТекст патэрна.
RegExp.compile() \nКомпилирует объект регулярного выражения.
RegExp.exec() \nВыполняет поиск совпадения в своём строковом параметре. 
RegExp.test() \nТестирует на совпадение в своём строковом параметре.
RegExp.toSource() \nВозвращает литерал объекта, представляющий специфицированный объект; Вы можете использовать это значение для создания нового объекта. Переопределяет метод Object.toSource.
RegExp.toString() \nВозвращает строку, представляющую специфицированный объект. Переопределяет метод Object.toString.
RegExp.valueOf() \nВозвращает примитивное значение специфицированного объекта. Переопределяет метод Object.valueOf.

reset.form \nСпецифицирует форму, содержащую объект Reset.
reset.name \nОтражает атрибут NAME.
reset.type \nОтражает атрибут TYPE.
reset.value \nОтражает атрибут VALUE.
reset.blur() \nУбирает фокус с кнопки reset.
reset.click() \nСимулирует щелчок мыши по кнопке reset.
reset.focus() \nПередаёт фокус кнопке reset.
reset.handleEvent() \nВызывает обработчик для специфицированного события.

screen.availHeight \nСпецифицирует высоту экрана в пикселах, минус постоянные или полупостоянные настройки пользовательского интерфейса, отображаемые операционной системой, такие как Taskbar в Windows.
screen.availLeft \nСпецифицирует х-координату первого пиксела, который не размещен в постоянных или полупостоянных настройках пользовательского интерфейса.
screen.availTop \nСпецифицирует у-координату первого пиксела, который не размещен в постоянных или полупостоянных настройках пользовательского интерфейса.
screen.availWidth \nСпецифицирует ширину экрана в пикселах, минус постоянные или полупостоянные настройки пользовательского интерфейса, отображаемые операционной системой, такие как Taskbar в Windows.
screen.colorDepth \nБитовая глубина цветовой гаммы, если она используется; иначе значение берётся из screen.pixelDepth.
screen.height \nВысота экрана монитора.
screen.pixelDepth \nРазрешение экрана монитора (в битах на пиксел). 
screen.width \nШирина экрана монитора.

select.form \nСпецифицирует форму, содержащую список selection.
select.length \nОтражает количество опций в списке selection.
select.name \nОтражает атрибут NAME.
select.options \nОтражает тэги OPTION.
select.selectedIndex \nОтражает индекс выбранной опции (или первой выбранной опции, если выбрано несколько опций).
select.type \nСпецифицирует, что представляемый им объект это список selection и может ли он иметь одну или более выбранных опций.
select.blur() \nУбирает фокус со списка selection.
select.focus() \nПередаёт фокус списку selection.
select.handleEvent() \nВызывает обработчик для специфицированного события

string.constructor \nСпецифицирует функцию, которая создаёт прототип объекта.
string.length \nОтражает длину строки.
string.prototype \nПозволяет добавлять свойства в String-объект.
string.anchor() \nСоздаёт HTML-якорь, используемый как цель гиперссылки.
string.big() \nВыводит строку шрифтом big/увеличенным, как в тэге BIG.
string.blink() \nВыводит строку шрифтом blink, как в тэге BLINK.
string.bold() \nВыводит строку жирным шрифтом, как в тэге B.
string.charAt() \nВозвращает символ по специфицированному индексу.
string.charCodeAt() \nВозвращает число, указывающее Unicode-значение символа по данному индексу.
string.concat() \nОбъединяет текст двух строк и возвращает новую строку.
string.fixed() \nВыводит строку шрифтом фиксированной ширины, как в тэге TT.
string.fontcolor() \nВыводит строку специфицированным цветом, как в тэге <FONT COLOR=color>.
string.fontsize() \nВыводит строку шрифтом специфицированного размера, как в тэге <FONT SIZE=size>.
string.fromCharCode() \nВозвращает строку, созданную с использованием специфицированной последовательности Unicode-значений.
string.indexOf() \nВозвращает индекс, в вызывающем String-объекте, первого появления специфицированного значения или -1 - если оно не найдено.
string.italics() \nВыводит строку шрифтом italic, как в тэге I.
string.lastIndexOf() \nВозвращает индекс, в вызывающем String-объекте, последнего появления специфицированного значения или -1 - если оно не найдено.
string.link() \nСоздаёт гиперссылку HTML, которая вызывает другой URL.
string.match() \nИспользуется для поиска совпадений регулярного выражения со строкой.
string.replace() \nИспользуется для поиска совпадений регулярного выражения со строкой и для замены совпавшей подстроки новой подстрокой.
string.search() \nВыполняет поиск совпадения между регулярным выражением и специфицированной строкой.
string.slice() \nИзвлекает часть строки и возвращает новую строку. 
string.small() \nВыводит строку шрифтом small/уменьшенным, как в тэге SMALL.
string.split() \nРазделяет String-объект на массив строк, разделяя строку на подстроки.
string.strike() \nВыводит строку перечёркнутым шрифтом, как в тэге STRIKE.
string.sub() \nВыводит строку как subscript/подиндекс, как в тэге SUB.
string.substr() \nВозвращает специфицированное количество символов строки, начинающихся от специфицированного места.
string.substring() \nВозвращает символы строки между двумя индексами строки.
string.sup() \nВыводит строку как superscript/надиндекс, как в тэге SUP.
string.toLowerCase() \nВозвращает вызывающую строку, конвертированную в нижний регистр.
string.toSource() \nВозвращает литерал объекта, представляющий специфицированный объект; можно использовать это значение для создания нового объекта. Переопределяет метод Object.toSource.
string.toString() \nВозвращает строку, представляющую специфицированный объект. Переопределяет метод Object.toString.
string.toUpperCase() \nВозвращает вызывающую строку, конвертированную в верхний регистр.
string.valueOf() \nВозвращает примитивное значение специфицированного объекта. Переопределяет метод Object.valueOf.

style.align \nСпецифицирует выравнивание HTML-элемента относительно родительского элемента.
style.backgroundColor \nСпецифицирует сплошной цвет фона элемента.
style.backgroundImage \nСпецифицирует фоновый рисунок для HTML-элемента.
style.borderBottomWidth \nСпецифицирует ширину нижней линии рамки HTML-элемента.
style.borderColor \nСпецифицирует цвет рамки HTML-элемента.
style.borderLeftWidth \nСпецифицирует ширину левой линии рамки HTML-элемента.
style.borderRightWidth \nСпецифицирует ширину правой линии рамки HTML-элемента.
style.borderStyle \nСпецифицирует стиль рамки, такой как solid или double, вокруг HTML-элемента уровня блока.
style.borderTopWidth \nСпецифицирует ширину верхней линии рамки HTML-элемента.
style.clear \nСпецифицирует стороны HTML-элемента, которые разрешают всплывание/floating элементов.
style.color \nСпецифицирует цвет текста HTML-элемента.
style.display \nПереопределяет обычное отображение элемента и специфицирует, отображается ли он in- line, как элемент уровня блока или как емента списка уровня блока.
style.fontFamily \nСпецифицирует семейство шрифтов, такое как Helvetica или Arial, для текстового элемента HTML.
style.fontSize \nСпецифицирует размер шрифта для HTML-элемента.
style.fontStyle \nСпецифицирует стиль шрифта для HTML-элемента.
style.fontWeight \nСпецифицирует вес шрифта для HTML-элемента.
style.lineHeight \nСпецифицирует расстояние между базовыми линиями двух смежных строк шрифта уровня блока.
style.listStyleType \nСпецифицирует стиль символа, отображаемого в начале элемента списка.
style.marginBottom \nСпецифицирует минимальное расстояние между низом HTML-элемента и верхом прилегающего элемента.
style.marginLeft \nСпецифицирует минимальное расстояние между левым краем HTML-элемента и правым краем прилегающего элемента.
style.marginRight \nСпецифицирует минимальное расстояние между правым краем HTML-элемента и левым краем прилегающего элемента.
style.marginTop \nСпецифицирует минимальное расстояние между верхом HTML-элемента и низом прилегающего элемента.
style.paddingBottom \nСпецифицирует, какое пространство вставить между низом элемента и его содержимым, таким как текст или рисунок.
style.paddingLeft \nСпецифицирует, какое пространство вставить между левым краем элемента и его содержимым, таким как текст или рисунок.
style.paddingRight \nСпецифицирует, какое пространство вставить между правым краем элемента и его содержимым, таким как текст или рисунок.
style.paddingTop \nСпецифицирует, какое пространство вставить между верхом элемента и его содержимым, таким как текст или рисунок.
style.textAlign \nСпецифицирует выравнивание текстового HTML-элемента уровня блока.
style.textDecoration \nСпецифицирует специальные эффекты, такие как мигание, перечёркивание и подчёркивание, добавляемые к текстовому HTML-элементу.
style.textIndent \nСпецифицирует размер отступа перед первой отформатированной строкой текстового HTML-элемента уровня блока.
style.textTransform \nСпецифицирует регистр текстового HTML-элемента уровня блока.
style.whiteSpace \nСпецифицирует, должен ли сжиматься пробел внутри HTML-элемента.
style.width \nСпецифицирует ширину HTML-элемента уровня блока.
style.borderWidths() \nСпецифицирует ширину рамки HTML-элемента.
style.margins() \nСпецифицирует минимальное расстояние между краями HTML-элемента и краями смежных элементов. 
style.paddings() \nСпецифицирует, какое пространство вставить между краями элемента и его содержимым, таким как текст или рисунок.

submit.form \nСпецифицирует форму, содержащую Submit-объект.
submit.name \nОтражает атрибут NAME.
submit.type \nОтражает атрибут TYPE.
submit.value \nОтражает атрибут VALUE.
submit.blur() \nУбирает фокус с кнопки submit.
submit.click() \nСимулирует щелчок мыши по кнопке submit.
submit.focus() \nПередаёт фокус кнопке submit.
submit.handleEvent() \nВызывает обработчик для специфицированного события.

text.defaultValue \nОтражает атрибут VALUE.
text.form \nСпецифицирует форму, содержащую Text-объект.
text.name \nОтражает атрибут NAME.
text.type \nОтражает атрибут TYPE.
text.value \nОтражает текущее значение поля объекта Text.
text.blur() \nУбирает фокус с объекта.
text.focus() \nПередаёт фокус объекту.
text.handleEvent() \nВызывает обработчик для специфицированного события.
text.select() \nВыделяет область ввода объекта.

textarea.defaultValue \nОтражает атрибут VALUE.
textarea.form \nСпецифицирует форму, содержащую Textarea-объект.
textarea.name \nОтражает атрибут NAME.
textarea.type \nСпецифицирует тип объекта (в данном случае Textarea).
textarea.value \nОтражает текущее значение Textarea-объекта.
textarea.blur() \nУбирает фокус с объекта.
textarea.focus() \nПередаёт фокус объекту.
textarea.handleEvent() \nВызывает обработчик для специфицированного события.
textarea.select() \nВыделяет область ввода объекта.

window.closed \nСпецифицирует, закрыто ли окно.
window.clipboardData.getData("Text")
window.clipboardData.setData("Text", set_text)
window.crypto \nОбъект, дающий доступ к возможностям шифрования Navigator'а.
window.defaultStatus \nОтражает сообщение по умолчанию, выводимое в статусной строке.
window.document \nСодержит информацию о текущем документе и предоставляет методы для отображения вывода HTML пользователю.
window.frames \nМассив, отражающий все фрэймы окна.
window.history \nСодержит информацию о URL, которые клиент посетил в данном окне.
window.innerHeight \nСпецифицирует вертикальные размеры в пикселах области содержимого окна.
window.innerWidth \nСпецифицирует горизонтальные размеры в пикселах области содержимого окна.
window.length \nКоличество фрэймов в окне.
window.location \nСодержит информацию о текущем URL.
window.locationbar \nАдресная строка окна браузера.
window.menubar \nСтрока меню окна браузера. 
window.name \nУникальное имя, используемое для обращения к данному окну.
window.offscreenBuffering \nСпецифицирует, выполняются ли обновления окна во внеоконном буфере.
window.opener \nСпецифицирует имя окна вызывающего документа, если окно открывается методом open.
window.outerHeight \nСпецифицирует вертикальные размеры в пикселах внешней границы окна. 
window.outerWidth \nСпецифицирует горизонтальные размеры в пикселах внешней границы окна.
window.pageXOffset \nПредоставляет текущую x-позицию в пикселах просматриваемой страницы окна.
window.pageYOffset \nПредоставляет текущую у-позицию в пикселах просматриваемой страницы окна.
window.parent \nСиноним окна или фрэйма, чей frameset содержит текущий фрэйм.
window.personalbar \nПредставляет personal bar окна браузера (называемый также строкой директорий).
window.screenX \nСпецифицирует x-координату левого края окна.
window.screenY \nСпецифицирует у-координату верхнего края окна.
window.scrollbars \nПолосы прокрутки окна браузера.
window.self \nСиноним текущего окна.
window.status \nСпецифицирует приоритетное сообщение статусной строки окна.
window.statusbar \nСтатусная строка окна браузера.
window.toolbar \nСтрока утилит окна браузера.
window.top \nСиноним наивысшего окна браузера.
window.window \nСиноним текущего окна.
window.alert() \nОтображает диалоговое окно Alert с сообщением и кнопкой OK.
window.atob() \nДекодирует строку данных, кодированную с использованием кодировки base-64.
window.back() \nОтменяет последний шаг истории в любом фрэйме окна верхнего уровня.
window.blur() \nУбирает фокус со специфицированного объекта.
window.btoa() \nСоздаёт строку с кодирование base-64.
window.captureEvents() \nУстанавливает захват окном или документом всех событий специфицированного типа.
window.clearInterval() \nОтменяет таймаут, установленный методом setInterval.
window.clearTimeout() \nОтменяет таймаут, установленный методом setTimeout.
window.close() \nЗакрывает специфицированное окно.
window.confirm() \nВыводит диалог Confirm со специфицированным сообщением и кнопками OK и Cancel.
window.crypto.random() \nВозвращает псевдослучайную строку, длина которой равна специфицированному количеству байтов.
window.crypto.signText() \nВозвращает строку кодированных данных, которая представляет маркированный/помеченный объект.
window.disableExternalCapture() \nОтменяет захват внешних событий, установленный методом enableExternalCapture.
window.enableExternalCapture() \nРазрешает окну с фрэймами захватывать события в страницах, загружаемых с других серверов. 
window.find() \nНаходит специфицированную текстовую строку в содержимом специфицированного окна.
window.focus() \nПередаёт фокус специфицированному элементу.
window.forward() \nЗагружает следующий URL из списка history.
window.handleEvent() \nВызывает обработчик для специфицированного события.
window.home() \nПереводит браузер на URL, специфицированный в установках пользователя как домашняя страница.
window.moveBy() \nПеремещает окно на специфицированные величины.
window.moveTo() \nПеремещает верхний левый угол окна на специфицированные координаты экрана.
window.open() \nОткрывает новое окно web-браузера.
window.print() \nПечатает содержимое текущего окна или фрэйма.
window.prompt() \nВыводит диалог Prompt с сообщением и полем для ввода.
window.releaseEvents() \nУстанавливает освобождение захваченных окном событий специфицированного типа, отправляя событие объектам далее по иерархии событий.
window.resizeBy() \nИзменяет размеры всего окна, перемещая нижний правый угол окна на специфицированные величины.
window.resizeTo() \nИзменяет размеры всего окна на специфицированные внешние высоту и ширину.
window.routeEvent() \nПередаёт захваченное событие по нормальной иерархии событий.
window.scroll() \nПрокручивает окно до специфицированной координаты.
window.scrollBy() \nПрокручивает область просмотра окна на специфицированную величину.
window.scrollTo() \nПрокручивает окно до специфицированной координаты, так что специфицированная точка становится левым верхним углом.
window.setHotKeys() \nВключает или отключает горячие клавиши окна, не имеющего меню.
window.setInterval() \nВычисляет выражение или вызывает функцию всякий раз по истечении специфицированного количества миллисекунд.
window.setResizable() \nСпецифицирует, может ли пользователь изменять размеры окна.
window.setTimeout() \nВычисляет выражение или вызывает функцию всякий раз по истечении специфицированного количества миллисекунд.
window.setZOptions() \nСпецифицирует z-order стэкирования в окне.
window.stop() \nОстанавливает загрузку.
