# Глобальные настройки SciTE (действительны для всех пользователей)

# Учтите, что настройки этого файла могут быть перекрыты файлом SciTEUser.properties
# а также файлами *.properties конкретных языков программирования
# Кроме того, все настройки могут быть модифицированы подключенными скриптами

# Для Linux поместите в $prefix/share/scite
# Для Windows в том же каталоге, где расположен SciTE.EXE (или Sc1.EXE)

# Идея использовать в этом файле секции по праву принадлежит Vadikan <unattended.oszone.net>

[Main]               Различные настройки программы
# Установка каталога SciteUserHome для сохранения пользовательских данных
# (SciTE.recent, SciTE.ses, SciTEUser.properties)
# Работает только в версии Ru-Board
scite.userhome=$(SciteDefaultHome)\data\home

# Установка в 1 позволяет использовать единый файл настроек, расположенный в корне проекта, вместо нескольких локальных в каждом из подкаталогов
properties.directory.enable=1

# Видимость меню в полноэкранном режиме (невидимо=1)
full.screen.hides.menu=1

# Сворачивать в трей
#~ minimize.to.tray=1

# После выполнения кода, по F4 выделяет строку - источник ошибки
error.select.line=1

# 0 разрешает прокрутку окна на одну страницу ниже текста
end.at.last.line=0

# Установка в 1 снижает точность отображения активности/неактивности кнопок на панели инструментов
# Это может улучшить работу на относительно медленных машинах
#~ undo.redo.lazy=1

# В версии для GTK+ определяет начальные размеры окна диалога выбора файлов вызываемого командами Открыть(Open) и Сохранить(Save). В Windows данный параметр не работает.
#~ fileselector.width=800
#~ fileselector.height=600
#~ fileselector.show.hidden=1

# Начальное значение увеличения (Zoom) размера шрифта, заданного в стиле по умолчанию
# устанавливаемое при запуске SciTE или при изменении разрешения экрана
# Возможно использование как положительных так и отрицательных величин.
#~ magnification=0
#~ output.magnification=0

# Вывод данных непосредственно на экран (0) или сначала в буфер, и только потом на экран (1)
buffered.draw=1
# При 1 - более качественный (но и более медленный) способ прорисовки текста
two.phase.draw=1
# 1 устанавливает цветовую палитру в 8 бит
use.palette=1

main.menu.used=0

# Checking
# 1 включает запрос сохранения при закрытии файла. О - сохраняет изменения без запроса.
are.you.sure=1
# 1 включает запрос сохранения при сборке (F7) файла. О - сохраняет изменения без запроса.
#~ are.you.sure.for.build=1
#~ save.all.for.build=1
# 1 закрывает SciTE при закрытии последней вкладки
#~ quit.on.close.last=1

# 1 включает слежение за тем, не был ли открытый в SciTE файл модифицирован другой программой
load.on.activate=1
# 1 включает запрос "Файл изменен другой программой. Перезагрузить его?"
are.you.sure.on.reload=1
# 1 включает запрос при сохранении "Файл изменен другой программой. Переписать его?"
save.check.modified.time=1

# 1 включает автоматическое сохранение файла при потере фокуса SciTE
#~ save.on.deactivate=1
# 1 - при перезагрузке файла не удаляется история отмены
reload.preserves.undo=1
# Если SciTE открыт, то файлы загружаются в существующую копию программы
check.if.already.open=1

# Определяет используемый режим языка для создаваемого (Ctrl+N) файла, прежде чем ему будет назначено имя
default.file.ext=.txt
# Если заданное в ком. строке имя файла без расширения не найдено, то SciTE будет пытаться открыть одноименный файл с указанными ниже расширениями
source.default.extensions=.h|.cxx|.bat

# 1 - диалог "Открыть" открывается в папке текущего файла, 0 - где открывали последний раз
#~ open.dialog.in.file.directory=1
# 1 при сохранении удаляет символы пробелов и табуляции на концах строк
strip.trailing.spaces=1
# 1 при сохранении добавляет в конец последней строки файла символ окончания строки (если он отсутствует)
ensure.final.line.end=1
# 1 при сохранении файла устанавливает в окончание всех линий текущий символ окончания строки (CRLF, CR, LF)
ensure.consistent.line.ends=1
#~ save.deletes.first=1

# При отсутствии перевода вставить знак...
#~ translation.missing=***
# Открывать новый документ в режиме только чтение
#~ read.only=1
#~ max.file.size=1
# Расположение в списке для новой вкладки (работает только в SciTE-Ru)
# 0 - открывать новую вкладку в конце списка (default), 1 - следующей за текущей, 2 - в начале списка
buffers.new.position=1

# При 1 (по умолчанию) переносит каретку как в Visual C++ на конец отступа (начало текста) и если каретка уже там, то на начало строки.
#~ vc.home.key=0

# Автоматическое создание резервного *.bak файла (auto_backup.lua)
# ключ определяет кол-во сохраняемых вариантов. Отсутствие ключа или 0 - отказ от создания резервной копии
#~ backup.files=1
# Каталог для сохранения резервных копий (возможно использование переменных окружения)
# При отсутствии параметра резервные копии сохраняются рядом с исходным файлом
backup.path=$(TEMP)\$$$SciTE.tmp
#~ backup.path=_bak_

# Параметр selection.hide.on.deactivate=0 позволяет не снимать выделение с текста когда окно SciTE теряет фокус.
selection.hide.on.deactivate=0

# При 1 можно делать многкратные выделения мышью, удерживая клавишу Ctrl (0 - отключает эту возможность)
#~ selection.multiple=0

# При 1 печать и вставка текста, нажатие на клавиши BackSpace или Delete будет одновременно применятся на все выделенные части текста
#~ selection.additional.typing=0

# Открытие файла по клику мышью на его имени с зажатой клавишей Ctrl (Select_And_Open_Filename.lua)
select.and.open.by.click=1

# Список имен лексеров и список расширений файлов для которых на открытие и на сохранение файла автоматически выполняется подсветка линков
# (работает только в версии SciTE-Ru со скриптом HighlightLinks.lua)
# highlight.links.lexers=null
highlight.links.exts=txt

# Параметр change.overwrite.enable=0 отключает возможность переключения режима вставка/замена
#~ change.overwrite.enable=0


style.*.255=fore:#808080,back:#FEFEFE

# Позволяет перемещать каретку дальше последнего символа на линии (1-при прямоугольном выделении, 2-мышью или курсорными клавишами, 3-в обоих случаях)
virtual.space=3

[Position]           Размеры и позиция окна программы
# Позиция левого верхнего угла окна программы
if PLAT_WIN
  #~ position.left=0
  #~ position.top=0

if PLAT_GTK
  position.left=5
  position.top=22

# Ширина и высота окна (в полный экран=-1)
#~ position.width=-1
#~ position.height=-1
#~ position.maximize=1

#~ horizontal.scrollbar=0
horizontal.scroll.width=100

# Если=1, то position.left нового окна = position.left + position.width первого окна.
#~ position.tile=1

[Title]              Текст в заголовке основного окна SciTE
# Выбор, как будет отображаться имя файла в заголовке:
# 0(по умолчанию) -  отображается только имя файла
# 1 - отображается - путь\имя_файла
# 2 - отображается - имя_файла in путь
title.full.path=2
# Отображается ли номер активного буфера в заголовке.
# 0 - не отображается
# 1 - отображается - [1 of 3]
title.show.buffers=1

[Margin]             Размеры отступов для окна программы, текста, колонки с номерами строк и фолдинга
# Отбражать или нет колонку с номерами строк и меток(bookmarks).
line.margin.visible=1
# Резервирует ширину колонки, с точки зрения количества цифр в номере.
# Для автоматического увеличения ширины поля, необходимо добавить + после цифры
line.margin.width=2+
# Размер колонки (в пикселях) для меток(bookmarks). (Требует перезапуска)
margin.width=13

# Размер колонки (в пикселях) для фолдинга (свертывание/развертывание процедур)
#~ fold.margin.width=13

# Размер отступа с обеих сторон текста (в пикселях)
blank.margin.left=4
#~ blank.margin.right=4

# 0 отключает установку меток по клику мышью в колонке букмарков (работает только в SciTE-Ru)
#~ margin.bookmark.by.single.click=0

[Output Screen]      Положение и размер окна консоли
# Автоматически очищает окно консоли перед выполнением любого скрипта
# т.е. выполняет команду output:ClearAll()  (LUA)
clear.before.execute=0

# 1 - окно консоли справа, 0 - внизу
split.vertical=0
# размеры окна консоли
#~ output.horizontal.size=200
#~ output.vertical.size=60
output.initial.hide=1
output.horizontal.scrollbar=1
output.horizontal.scroll.width=10000
#~ output.scroll=0
output.cache.layout=3

# 1 - после завершения команды выводится время ее выполнения (в секундах)
time.commands=1

# Размер символа табуляции в окне консоли (используется скрипт в SciTEStartup.lua)
output.tabsize=2

[Tabbar]             Панель вкладок
# Показывать панель вкладок (0/1)
tabbar.visible=1
# Скрывать панель вкладок, если открыт только один файл
tabbar.hide.one=0
# Панель вкладок в несколько строк
tabbar.multiline=1
# Ограничение на длинну отображаемого на вкладке имени файла (работает только в SciTE-Ru)
tabbar.title.maxlength=20
# Отображать статус R/O в имени вкладки с помощью символов (работает только в SciTE-Ru)
tabbar.readonly.marker= вЂў
# Закрывать вкладку двойным кликом на ней (только в SciTE-Ru)
tabbar.tab.close.on.doubleclick=1
# Количество вкладок
buffers=100
buffers.zorder.switching=1

[Braces and Tags]    Поведение скобок и тегов
# Подсветка парных скобок (0/1)
braces.check=1
braces.sloppy=1

# Автозакрытие скобок. (Работает с помощью lua скрипта braces_autoclose.lua)
braces.autoclose=1
braces.open=({['"
braces.close=)}]'"

# Автозакрытие тегов. (Работает с помощью lua скрипта html_tags_autoclose.lua)
tags.autoclose=1

[Whitespace]         Отображение непечатаемых символов (пробелов, табуляции, символов конца строки)
# Показывать символы конца строки
view.eol=0
# Задает символ перевода строки (CR, LF или CRLF)
#~ eol.mode=LF
# Эта установка отменяет eol.mode, и выбирает символ перевода строки исходя из текущего содержания файла
eol.auto=1
# Символ для отображения непечатных символов
#~ control.char.symbol=°
# Показывать пробелы и табуляции (0/1)
view.whitespace=0
view.indentation.whitespace=1
view.indentation.guides=1
highlight.indentation.guides=1

[Indent]             Настройки отступов и табуляции
# размер отступа
tabsize=4
# размер отступа, для использования при автоматических отступах
indent.size=4
# При 0 символ табуляции при вводе автоматически заменяется на пробелы
use.tabs=0
# при 1 значения indent.size и use.tabs берутся из открытого документа
indent.auto=0
# при 1 символ табуляции при вводе автоматически заменяется на indent.size пробелов
tab.indents=1
# при 1 нажатие на backspace в пределах отступа удалит indent.size пробелов
backspace.unindents=1

# При 1 - включение автоматического отступа
indent.automatic=1
indent.opening=1
indent.closing=1
# indent.maintain.*=1

[Wrap]               Задание ширины для правой ограничительной линии и перенос длинных строк
# Задание ширины для правой ограничительной линии (если больше - то это считается превышением и может отмечаться)
edge.column=100
# Способ показа превышения допустимой ширины (0-без показа, 1-линия, 2-цвет)
edge.mode=1

# Переносить длинные строки (0/1)
wrap=0
#~ wrap.style=2
wrap.visual.flags=3
wrap.visual.flags.location=1
wrap.visual.startindent=4
wrap.indent.mode=1
# при нажатии на home end курсор позиционируется в строке с учетом переноса
wrap.aware.home.end.keys=1
cache.layout=3
# Переносить длинные строки в консоли (0/1)
output.wrap=1

[Folding]            Свертывание блоков текста
# Включаем фолдинг (0/1)
fold=1

# Сворачивать при открытии файла (0/1)
#~ fold.on.open=1

# Автоматическая свертка всех секций при открытии файлов заданного типа (ToggleFoldAll.lua)
fold.on.open.ext=properties,ini

# Тип фолдинга (2/4/8/16)
fold.flags=16

#Символ фолдинга (0/1/2/3)
fold.symbols=3

fold.compact=0
fold.comment=1
fold.comment.python=1
fold.quotes.python=1
fold.preprocessor=1
fold.html.preprocessor=0

# Задает условный символ обозначающий начало блока свертки для текстовых файлов. Если вместо символа поставить 1, то началом будут считаться пронумерованные заголовки. (FoldText.lua)
fold.text.outline=*
#~ fold.text.ext=txt,doc

[Find and Replace]   Поиск и замена
# ПОИСК В ТЕКУЩЕМ ФАЙЛЕ
#~ find.in.files.close.on.find=0
#~ find.replace.matchcase=1
#~ find.replace.escapes=1
#~ find.replace.regexp=1
find.replace.regexp.posix=1
#~ find.replace.wrap=0
#~ find.replacewith.focus=0

# Если 1, то вместо диалогового окна поиска используется панель
# find.use.strip=1

# Если 0, то диалоговое окно поиска не закрывается автоматически (только в SciTE-Ru)
find.close.on.find=0

# Отменяет установку меток после нажатия "Пометить все" в диалоге поиска (только в SciTE-Ru)
find.bookmark.disable=1

# Если 1, то при нажатии на кнопку "Заменить все" курсор возвращается на исходную позицию (только в SciTE-Ru)
find.replace.return.to.start=1

# Если 1, то при нажатии на кнопку "Пометить все" удаляются все установленные ранее метки (только в SciTE-Ru)
# (установленные ранее маркеры удаляются всегда)
#~ find.mark.delete=1

# Позволяет задать способ начального заполнения поля в диалоге поиска (только в SciTE-Ru)
#   0 (по умолчанию) - если есть выделение и оно не содержит переводов строк, то использовать его, иначе взять слово рядом с курсором (как это и было ранее),
#   1 - использовать выделение, если выделения нет, то оставить поле пустым,
#   2 - всегда оставлять поле пустым.
find.fillout=1

# Включает кнопку "Replace in Buffers" в диалоге замены и чекбокс для поиска в определенном стиле
find.replace.advanced=1

# Отметка всех вхождений текста полупрозрачным цветным прямоугольником после нажатия "Пометить все" в диалоге поиска (очень удобно)
find.mark=#0F0F0F

# Утилита findstr имеется на последних версиях Windows, включая 2000
if PLAT_WIN
  #~ find.command=findstr /n /s /c:"$(find.what)" $(find.files)
  #~ find.input=$(find.what)
if PLAT_GTK
  #~ find.command=grep --line-number "$(find.what)" $(find.files)
# Список расширений файлов, в которых будет производится поиск (нельзя задавать маску *.*)
find.files=\
*.inc *.xml *.m *.sql|\
*.lua *.properties *.api|\
*.html *.htm *.php *.js|\
*.properties *.html *.xml *.iface|\
*.vbs *.js *.wsf *.hta *.lua|\
make* *.mak *.bat *.e|\
*.vb *.vbs *.bas *.frm *.cls *.ctl|\
*.java *.js *.py *.pl *.rb *.cgi *.lua *.conf|\
*.asm *.c *.cc *.cpp *.cxx *.cs *.h *.hh *.hxx *.hpp *.rc|\
*.pas *.dpr *.dpk *.dfm *.res|\
*.idl *.odl *.rc *.rc2 *.dlg *.def

# Параметры скрипта FindText.lua
# Поиск с учетом регистра
#~ findtext.matchcase=1
# Отмечать букмарками найденные строки
findtext.bookmarks=0
# Выводить все найденные строки в консоль
findtext.output=1
# Показывать подсказку по горячим клавишам
findtext.tutorial=1
findtext.wholeword=1
findtextsimple.count=0
[Open]               Настройки файлового фильтра в диалоге открытия файла (Ctrl+O)
# The open.filter setting is only used on Windows where the file selector has a menu of filters to apply
# to the types of files seen when opening.
# There is a limit (possibly 256 characters) to the length of a filter,
# so not all source extensions can be in this setting.
source.files=*.asm;*asp;*.au3;*.c;*.cc;*.cpp;*.cxx;*.cs;*.h;*.hh;*.hxx;*.hpp;\
*.rc;*.rc2;*.dlg;*.def;\
*.vb;*.vbs;*.bas;*.frm;*.cls;*.ctl;\
*.java;*.js;*.py;*.pl;*.rb;*.cgi;*.lua;*.conf;\
make*;*.mak;\
*.properties;*.xml;*.iface;*.bat;*.e;\
*.sql;*.php;*.inc;*.css;*.js;*.html;*.htm;*.hta

if PLAT_WIN
	all.files=All Files (*.*)|*.*|
if PLAT_GTK
	all.files=All Files (*)|*|Hidden Files (.*)|.*|
open.filter=\
$(all.files)\
$(filter.formenjine)\
$(filter.js)\
$(filter.lua)\
$(filter.properties)\
$(filter.text)\
$(filter.vb)\
$(filter.mssql)\
$(filter.web)|

save.filter=$(open.filter)

[Print]              Параметры печати (работает только в Windows)
if PLAT_WIN
  print.colour.mode=4
  # Разница между размером шрифта для печати и размером шрифта, указанным в настройках для стиля по умолчанию
  print.magnification=0

  # Установка: левый, правый, верхний, нижний отступ, в установленных единицах:
  # сотые доли миллиметра или тысячные дюйма
  print.margins=500,0,0,0
  # Header/footer:
  # && = &; &p = current page
  # &f = file name; &F = full path
  # &d = file date; &D = current date
  # &t = file time; &T = full time
  print.header.format=$(FileNameExt) — Распечатано $(CurrentDate), $(CurrentTime) — Страница $(CurrentPage)
  print.footer.format=$(FilePath) — File date: $(FileDate) — File time: $(FileTime)
  # Header/footer style
  print.header.style=font:Arial,size:8,bold,back:#BFBFBF
  print.footer.style=font:Arial Narrow,size:8,italics,back:#DFDFDF

[Export]             Параметры экспорта (меню "Файл" - "Экспортировать")
#~ export.keep.ext=1
export.html.wysiwyg=1
#~ export.html.tabs=1
#~ export.html.folding=1
export.html.styleused=1
#~ export.html.title.fullpath=1
#~ export.rtf.tabs=1
#~ export.rtf.font.face=Arial
#~ export.rtf.font.size=9
#~ export.rtf.tabsize=8
# Magnification (added to default screen font size)
export.pdf.magnification=0
# Font: Courier, Helvetica or Times (Courier line-wraps)
export.pdf.font=Courier
# Page size (in points): width, height
# E.g. Letter 612,792; A4 595,842; maximum 14400,14400
export.pdf.pagesize=595,842
# Margins (in points): left, right, top, bottom
export.pdf.margins=72,72,72,72
export.xml.collapse.spaces=1
export.xml.collapse.lines=1

[Help]               Вызов справки SciTE
if PLAT_WIN
  command.scite.help="$(SciteDefaultHome)\tools\html_HELP.hta" "$(SciteDefaultHome)\doc\SciTEDoc_rus.html"
  command.scite.help.subsystem=2

if PLAT_GTK
  command.print.*=a2ps "$(FileNameExt)"
  command.scite.help=netscape "file://$(SciteDefaultHome)/doc/SciTEDoc.html"

# Справки для языков программирования и api (всплывающие подсказки) подключены в соответствующих файлах .properties

[Warnings]           Звуковые и текстовые предупреждения
if PLAT_WIN
  # Звуковые предупреждения (работают только на Windows. Содержат указатели на wav файлы)
  # ФОРМАТ: <мигание окна (0 - не мигает)>,<путь до звукого файла>,<длительность проигрывания (не обязательно)>
  #~ warning.findwrapped=1,C:\WINDOWS\Media\chord.wav
  #~ warning.notfound=0,C:\WINDOWS\Media\ding.wav
  #~ warning.wrongfile=0,C:\WINDOWS\Media\Ir_begin.wav
  #~ warning.executeok=0,C:\WINDOWS\Media\ringin.wav
  #~ warning.executeko=1,C:\WINDOWS\Media\ringout.wav
  #~ warning.nootherbookmark=1,C:\WINDOWS\Media\ir_inter.wav

  # Текстовые собщения (Alert), если не определены, то не возникают (работает только в SciTE-Ru)
  #~ warning.findwrapped.message=Find wrapped!
  warning.notfound.message=Can't find!
  warning.wrongfile.message=Wrong file name!
  #~ warning.executeok.message=Execute OK!
  #~ warning.executeko.message=Execute KO!
  warning.nootherbookmark.message=No other bookmarks!
  # Отменяет вывод предупреждения "Не удается открыть файл" (работает только в SciTE-Ru)
  #~ warning.couldnotopenfile.disable=1

[International]      Национальные настройки
# Unicode UTF-8
#~ code.page=65001

# Russian code.page
# !Не рекомендуется устанавливать! code.page=1251 <http://code.google.com/p/scite-ru/issues/detail?id=49>
character.set=204

# OEM DOS866
#~ code.page=866
#~ character.set=255

# Required for Unicode to work on GTK+:
#~ LC_CTYPE=en_US.UTF-8
#~ output.code.page=65001

# 1 включает перекодировку текста выводимого в окно консоли OEM в ANSI
# работает только в версии SciTE-Ru (доработка gansA)
output.code.page.oem2ansi=1
output.code.page=0

# включает автоматическое переключение кодировки в UTF-8 для файлов содержащих символы русского алфавита в этой кодировке
# работает только в версии SciTE-Ru (доработка VladVRO)
utf8.check=1
# ограничение на зону поиска в файле (в байтах)
# это позволит быстрее открывать большие по размеру файлы, но снизит вероятность правильного определения кодировки.
#utf8.check.max=1000

# Define values for use in the imported properties files
chars.alpha=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
chars.numeric=0123456789

# This is a better set for Russian:
chars.accented=АаБбВвГгДдЕеЁёЖжЗзИиЙйКкЛлМмНнОоПпРрСсТтУуФфХхЦцЧчШшЩщЪъЫыЬьЭэЮюЯя

[Tools Menu]         Пользовательские команды меню "Tools"
# ----------------------------------------------

command.name.13.sys.System.xml=Build Templates
command.13.sys.System.xml=precom_BuildTemplates
command.mode.13.sys.System.xml=subsystem:lua,savebefore:yes


command.separator.19.*=1
command.name.19.*=Open API file
command.19.*=dostring for api_filename in string.gmatch(props["APIPath"], "[^;]+") do scite.Open(api_filename) end
command.mode.19.*=subsystem:lua,savebefore:no
CN_OPENAPIFILE=019
# ----------------------------------------------


# Подключение пользовательской панели инструментов (она заменит заданную выше встроенную!)
#~ import home\toolbar_gnome.properties
#import home\toolbar_cool.properties

[Session & Settings] Опции сохранения установок и работы с сессиями
# Сохранять список недавно запущенных файлов (в меню Файл)
save.recent=1
# При запуске SciTE открывать файлы с котороми работали при прошлом сеансе
save.session=0
# Сохранять в файле сессии положение меток
session.bookmarks=1
# Сохранять в файле сессии фолдинг
session.folds=1
# Сохранять в файле сессии позицию и размеры окна SciTE
save.position=1
# Записывать файл сессии при выходе только если открыто более одной вкладки (работает только в SciTE-Ru)
# save.session.multibuffers.only=1
# Max кол-во пунктов (до 30) в списке последних открывавшихся файлов (работает только в SciTE-Ru)
save.recent.max=20
# Дополнительно использовать файл SciTE.recent (для хранения информации о ВСЕХ открываемых файлах) (RestoreRecent.lua и RestoreRecent.js)
save.session.recent=1
# Ускоренная загрузка сессии (работает только в SciTE-Ru)
#~ session.load.forced=1

# Использовать SessionManager.hta для открытия и сохранения сессий
session.manager=1
# При закрытии SciTE показывать окно SessionManager.hta для сохранения текущей сессии
save.session.manager.on.quit=0
# При закрытии SciTE автоматически создает новый файл "имя_дата_время.session" с содержимым текущей сессии
save.session.on.quit.auto=0

# Задает закрывать или нет уже открытые файлы при загрузке сессии (работает только в SciTE-Ru)
# по умолчанию = 1, и все вкладки перед загрузкой закрываются
# session.close.buffers.onload=0

# Делаем доступными переменные из файла SciTE.session
import $(scite.userhome)\SciTE.session

[Styles]             Шрифты и цветовые настройки
# Задание пользовательских переменных для шрифтов, используемых в стандартных стилях.
if PLAT_WIN
# -----------------------------------------------------------
  # Первая подборка шрифтов - monospace (заменяет 2й набор после нажатия на Ctrl+F11)
  font.0.base=font:Courier New,size:12
  font.0.small=font:Courier New,size:10
  font.0.comment=font:Courier New,size:11,italics

  # Вторая подборка шрифтов - proportional (заменяет 1й набор после нажатия на Ctrl+F11)
  font.1.base=font:Verdana,size:12
  font.1.small=font:Microsoft Sans Serif,size:10
  font.1.comment=font:Comic Sans MS,size:11

  # Определяем какой из наборов шрифтов будет использоваться по умолчанию
  font.base=$(font.0.base)
  font.small=$(font.0.small)
  font.comment=$(font.0.comment)

  # Переключение между наборами производится с помощью скрипта FontChanger.lua

  # Переменная font.monospace часто используется в файлах языков
  # а также используется в скрипте SciTEHexEdit.lua
  font.monospace=$(font.base)
# -----------------------------------------------------------

if PLAT_GTK
	font.base=font:!Bitstream Vera Sans,size:9
	font.small=font:!Bitstream Vera Sans,size:8
	font.comment=font:!Bitstream Vera Serif,size:9

# Зададим типовые цвета, чтобы затем их использовать во всех языковых .properties.
colour.comment=fore:#008000,size:12
colour.code.comment.doc=$(colour.comment),back:#FEFEFE
colour.embedded.comment=back:#E0EEFF

colour.number=fore:#AC00A9
colour.keyword=fore:#2D3C91
colour.string=fore:#4141AD
colour.char=$(colour.string)
colour.operator=fore:#652728
colour.preproc=fore:#7F7F00
colour.error=fore:#000000,back:#FFD6E1
colour.whitespace=fore:#808080

# Возможные значения параметров для строки style:
# font:<name>, size:<number>, fore:<colour>, back:<colour>, italics|notitalics, bold|notbold, eolfilled|noteolfilled, underlined|notunderlined, case:m|u|l, visible|notvisible, changeable|notchangeable
# Если строке стиля параметр упоминается дважды (следует избегать!), то действует крайнее правое значение.

# Глобальные стили по умолчанию для всех языков программирования

# Заданный по умолчанию стиль, и его особенности будут унаследованы всеми другими стилями
style.*.32=$(font.base)

# Фоновый цвет поля с нумерацией строк в режиме только для чтения (используется скриптом ReadOnly.lua)
# Если не задан, то фон в режиме ReadOnly не меняется
style.back.readonly=#F2F2F1

# Стиль для номеров строк (с левого края)
style.*.33=font:Microsoft Sans Serif,size:6,notbold

# Стиль используется, чтобы отобразить парные скобки () или {}
style.*.34=fore:#FF0000,back:#99FFCC,bold

# Стиль используется, чтобы отобразить незакрытые скобки ( или {
style.*.35=fore:#FF0000,back:#FFAAFF,bold
# Примечание: Для того, чтобы видеть фоновый цвет в style.*.34 и style.*.35, необходимо либо запретить caret.line.back либо использовать прозрачность (caret.line.back.alpha)

# Стиль для непечатных символов. Это - не полный стиль. И передний план, и фоновые цвета для этих символов определены соответствующим Lexer-ом, а не этим стилем
style.*.36=

# Indentation guides
style.*.37=fore:#C0C0C0,back:#FFFFFF

# Стиль всплывающих подсказок по синтаксису (берутся из API файлов)
style.*.38=font:MS Sans Serif,size:9,fore:#555555

# -------------------------------------------------------------
# Колонка для фолдинга (свертывание/развертывание процедур)
fold.margin.colour=#ECE9D8
#~ fold.margin.highlight.colour=#0000FF
fold.highlight.colour=#0099FF

# Цвет завышенных по длине строк (или ограничительной линии)
edge.colour=#FFE8FF

# Цвет выделенного текста
selection.fore=
# DADADA used as background because it yields standard silver C0C0C0
# on low colour displays and a reasonable light grey on higher bit depths
if PLAT_WINNT
	selection.alpha=50
	selection.back=#000000
if PLAT_WIN95
	selection.back=#DADADA
if PLAT_GTK
	selection.alpha=30
	selection.back=#000000

#~ selection.additional.fore=#0000A0
#~ selection.additional.back=#000080
#~ selection.additional.alpha=20

# Пробельные символы (пробел, табуляция)
whitespace.fore=#8F8F8F
#~ whitespace.back=#FFF0F0

#~ error.marker.fore=#0000A0
#~ error.marker.back=#DADAFF

# Цвет обода метки
#~ bookmark.fore=#000000
# Фоновый цвет метки
#~ bookmark.back=#AA0000
#~ bookmark.alpha=

# Цвет обода метки на строку с источником ошибки (значение по умолчанию #7F0000)
#~ error.marker.fore=#FF0099
# Фоновый цвет метки, строки в коде с источником ошибки, и строки в консоли с текстом ошибки (значение по умолчанию #FFFF00)
#~ error.marker.back=#FF9999
# Фоновый цвет строки с текстом ошибки в окне консоли (если необходим цвет, отличный от error.marker.back) (только в SciTE-Ru)
#~ error.line.back=#330000

# Курсор
caret.fore=#0000FF
# Цвет подсветки линии с курсором
caret.line.back=#3434FF
# Прозрачность (от 0 до 255) символов на линии с курсором
caret.line.back.alpha=12

# Курсор в окне консоли (только в SciTE-Ru)
output.caret.fore=#0000FF
# Цвет подсветки линии с курсором в окне консоли (только в SciTE-Ru)
output.caret.line.back=#FFFF00
# Прозрачность (от 0 до 255) символов на линии с курсором в окне консоли (только в SciTE-Ru)
output.caret.line.back.alpha=90

# Стили маркеров выделения текста, используемые в скриптах (от 0 до 31)
# Формат строки значения: <цвет>, <стиль> , где <стиль> может принимать значения
#                   plain, squiggle, tt, diagonal, strike, hidden, roundbox, box
# Если цвет не задан, используется цвет маркера find.mark по умолчанию
# Если стиль не задан, используется roundbox

# для highlighting_paired_tags.lua:
find.mark.1=#0000FF
find.mark.2=#FF0000
# для HighlightLinks.lua:
find.mark.3=#0000FF,plain

# для FindSimple.lua:
findsimple.mark=25
find.mark.25=#BB40B5
autoformat.err.mark=23
autoformat.good.mark=24
find.mark.23=#FF3300
find.mark.24=#CC33FF
# для FindSel.lua:
findsel.mark=26
find.mark.26=#66FF66
# для FindText.lua:
# findtext.first.mark=27
# find.mark.27=#770088
# find.mark.28=#0000FF
# find.mark.29=#00FF00
# find.mark.30=#CCCC00
# find.mark.31=#448800

indic.style.11=#0000FF
# Для spell.lua
spell.mark=12
indic.style.12=#FF0000,squiggle
# для HighlightLinks.lua:
indic.style.13=#0000FF,plain
# для highlighting_identical_text.lua:
indic.style.14=#FF9900,box
indic.style.15=#FF0000,box
# для highlighting_text.lua:
highlighting.text.marker=16
indic.style.16=#FF0080,@120
# для FindText.lua:
findtext.first.mark=27
indic.style.23=#FF3300,strike
indic.style.24=#26C649,box
indic.style.26=#66FF66
indic.style.27=#CC00FF,@50
indic.style.28=#0000FF,@50
indic.style.29=#00FF00,@50
indic.style.30=#FFFF00,@100
indic.style.31=#11DDFF,@80


import $(scite.userhome)\SciTEColors.properties

[Caret]              Курсор
# Скорость мерцания курсора [мсек]
caret.period=500

# Мерцание во всех выделениях
#~ caret.additional.blinks=0

# Ширина курсора
# caret.width=2

caret.policy.xslop=1
caret.policy.width=200
caret.policy.xstrict=0
caret.policy.xeven=1
caret.policy.xjumps=0
caret.policy.yslop=1
caret.policy.lines=1
caret.policy.ystrict=1
caret.policy.yeven=1
caret.policy.yjumps=1
#~ visible.policy.strict=1
#~ visible.policy.slop=1
visible.policy.lines=4
#~ caret.sticky=1

[Abbrev & API]       Общие установки для автодополнения и всплывающих подсказок по синтаксису
# При 1 SciTE после ввода каждой буквы будет услужливо выводить подсказку с возможными вариантами дополнения.
#autocompleteword.automatic=1
# При 1 подсказка будет многовариантной
# работает только в версии SciTE-Ru (доработка Sergey Kishchenko http://groups.google.com/group/scite-interest/browse_thread/thread/87ba9fd13989ae84)
autocompleteword.incremental=1

# (индивидуальные параметры для языков - в соответствующих .properties)
autocomplete.*.ignorecase=1
calltip.*.ignorecase=1

# Если используется только один файл сокращений, то без "abbrev.always.update=1" обновляться он будет только после перезапуска Scite
# работает только в версии SciTE-Ru (доработка mimir)
abbrev.always.update=1

# Максимальная длинна для сокращений, обрабатываемых по Ctrl+B, если не задана, то = 32
# работает только в версии SciTE-Ru (доработка VladVRO)
abbrev.maximum.length=50

[Languages]          Импорт всех специализированных файлов настройки для конкретных языков программирования
import $(scite.userhome)\Languages.properties


[LUA]                Подключение при загрузке внешнего LUA скрипта
ext.lua.startup.script=$(SciteDefaultHome)\tools\SciTEStartup.lua
ext.lua.debug.traceback=1
# Следующие 2 параметра не менять!
ext.lua.auto.reload=0
ext.lua.reset=0

[Macros]             Макросы
# Путь до файла макросов (по умолчанию $(scite.userhome)\SciTE.macro или $(SciteDefaultHome)\SciTE.macro)
#~ macro.file.path=

# Считывать макросы из файла макросов при запуске редактора
macro.load.on.startup=1

# Автоматически записывать текущие макросы в файл макросов
macro.autosave=1

# Открывать диалог задания имени макроса после окончания его записи (необходима внешняя библиотека shell)
macro.fill.name.dialog=1

# Позиция в списке макросов для вновь записанного (по умолчанию =1)
# -1 - задает добавление в конец списка
#~ macro.new.record.position=-1

# Стиль  для номеров строк (с левого края) во время записи макроса
macro.recording.numfield.style=$(style.*.33),back:#E9B6C9

[Precompiller]
precompiller.template.dir=c:\Systematica\Radius\RadiusServer\DATA\Templates
# Стиль  для номеров строк (с левого края) во время записи макроса
